# Generated by Django 4.2.16 on 2025-10-04 23:06

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SpendingInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('TREND', 'Spending Trend'), ('ANOMALY', 'Spending Anomaly'), ('PATTERN', 'Spending Pattern'), ('RECOMMENDATION', 'Recommendation'), ('WARNING', 'Budget Warning')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=10)),
                ('category_affected', models.CharField(blank=True, max_length=100)),
                ('amount_involved', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_date', models.DateTimeField(blank=True, null=True)),
                ('action_taken', models.TextField(blank=True)),
                ('action_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spending_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Spending Insight',
                'verbose_name_plural': 'Spending Insights',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='PredictiveAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('EXPENSE_FORECAST', 'Expense Forecast'), ('INCOME_FORECAST', 'Income Forecast'), ('SAVINGS_PROJECTION', 'Savings Projection'), ('BUDGET_VARIANCE', 'Budget Variance Prediction'), ('GOAL_ACHIEVEMENT', 'Goal Achievement Prediction')], max_length=20)),
                ('predicted_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('confidence_level', models.DecimalField(decimal_places=2, max_digits=5)),
                ('prediction_period_start', models.DateField()),
                ('prediction_period_end', models.DateField()),
                ('model_used', models.CharField(max_length=100)),
                ('training_data_points', models.IntegerField()),
                ('model_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('assumptions', models.JSONField(blank=True, default=dict)),
                ('risk_factors', models.JSONField(blank=True, default=list)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('actual_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('prediction_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('validated_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictive_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Predictive Analysis',
                'verbose_name_plural': 'Predictive Analyses',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='FinancialGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('goal_type', models.CharField(choices=[('SAVINGS', 'Savings Goal'), ('DEBT_REDUCTION', 'Debt Reduction'), ('INVESTMENT', 'Investment Goal'), ('EMERGENCY_FUND', 'Emergency Fund'), ('EXPENSE_REDUCTION', 'Expense Reduction')], max_length=20)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('target_date', models.DateField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('PAUSED', 'Paused'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('monthly_contribution_needed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Goal',
                'verbose_name_plural': 'Financial Goals',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='FinancialScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('budgeting_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('savings_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('spending_discipline_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('goal_progress_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('income_to_expense_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('savings_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('budget_adherence_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('calculation_date', models.DateTimeField(auto_now_add=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('improvement_suggestions', models.JSONField(blank=True, default=list)),
                ('strengths', models.JSONField(blank=True, default=list)),
                ('weaknesses', models.JSONField(blank=True, default=list)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Score',
                'verbose_name_plural': 'Financial Scores',
                'ordering': ['-calculation_date'],
                'unique_together': {('user', 'period_start', 'period_end')},
            },
        ),
    ]
